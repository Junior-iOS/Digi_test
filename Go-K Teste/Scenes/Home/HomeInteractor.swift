//
//  HomeInteractor.swift
//  Go-K Teste
//
//  Created by Junior Silva on 07/10/20.
//  Copyright (c) 2020 Junior Silva. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
// This tag below is used to create the testable files from the Cuckoo pod
// CUCKOO_TESTABLE

import UIKit

protocol HomeBusinessLogic {
    var numberOfRows: Int { get }
    
    func cellForRow(at indexPath: IndexPath) -> Home.Response?
    func didSelectRowAt(indexPath: IndexPath)
    func fetchList()
    func getItems() -> [Home.Response]
}

protocol HomeDataStore {
    var selectedItem: Home.Response? { get set }
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore {
    var presenter: HomePresentationLogic?
    var worker: HomeWorker?
    
    var homeList = [Home.Response]()
    var selectedItem: Home.Response?
    
    init(worker: HomeWorker = HomeWorker()) {
        self.worker = worker
    }
    
    var numberOfRows: Int {
        return homeList.count
    }
    
    func didSelectRowAt(indexPath: IndexPath) {
        selectedItem = homeList[indexPath.row]
        presenter?.presentSelectedItem()
    }
    
    func cellForRow(at indexPath: IndexPath) -> Home.Response? {
        return homeList[indexPath.row]
    }
    
    func fetchList() {
        worker?.searchList().done(handleSuccess).catch(handleError)
    }
    
    private func handleSuccess(_ response: Home.Response) {
        homeList.append(response)
        presenter?.reloadTableView()
    }
    
    private func handleError(_ error: Error) {
        
    }
    
    func getItems() -> [Home.Response] {
        return homeList
    }
}
